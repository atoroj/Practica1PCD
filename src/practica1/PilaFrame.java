/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package practica1;

import java.awt.Color;

/**
 *
 * @author Antonio
 */
public class PilaFrame extends java.awt.Frame {
     private CanvasPila cp;
      private static final int ANCHO = 500, ALTO = 700, CAPACIDAD = 10;
    /**
     * Creates new form PilaFrame2
     */
    public PilaFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        setLayout(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    public static void main(String args[]) throws InterruptedException {
        int capacidad = 10;
        PilaFrame f = new PilaFrame();
        CanvasPila cp = new CanvasPila(capacidad);
        cp.setSize(ANCHO, ALTO);
        cp.setBackground(Color.white);
        f.setSize(ANCHO, ALTO);
        f.add(cp);
        f.setTitle("Practica 4");
        f.setResizable(false);
        f.setLocationRelativeTo(null);
        f.setVisible(true);

        PilaLenta pila = new PilaLenta(capacidad, cp);
        
        Productor p1 = new Productor(pila, 0);
        Productor p2 = new Productor(pila, 0);
        Productor p3 = new Productor(pila, 0);
        Productor p4 = new Productor(pila, 0);
        Consumidor c = new Consumidor(pila);
        Thread c1 = new Thread(c);

        p1.start();
        p2.start();
        p3.start();
        p4.start();

        c1.start();
        c1.join();
        Thread.sleep(3500);
        for (int i = 0; i < 3; i++) {
            synchronized (pila) {
                pila.notifyAll();
            }
            Thread.sleep(100);
        }
        p1.join();
        p2.join();
        p3.join();
        p4.join();
        System.exit(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
